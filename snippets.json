{
	"initialize default beginning": {
		"prefix": "init",
		"body": [
			"//\t\t-----------------------------\t\t",
			"//\t\t\t\tFUNCTIONS\t\t\t",
			"//\t\t-----------------------------\t\t\n$0",
			"fun invalid(val) {",
				"// Usually applies to check settings and matches",
				"if (val == null) {",
					"\treturn true;",
				"} else if (val == \"\" or val == []) {",
					"\treturn true;",
				"} else {",
					"\treturn false;",
				"}",
			"}",
			"fun error(mes, num, line, advise) {",
				"\t// This function is independed from \"invalid\"\n",
				"\t// mes: error message to be outputted",
				"\t// num: number of error",
				"\t// line: a line of code an error was executed",
				"\t// advise: advise for user what to do",
				"\tvar buildenNum = \"\";",
				"\tvar buildenLine = \"\";",
				"\tvar buildenAdvise = \"\";",
				"\tif (!mes) {",
					"\t\tSys.alert(\"An unknown error occurred\");",
					"\t\tSys.stop();",
				"\t}",
				"\tif (num != null) {",
					"\t\tbuildenNum = \" \" + num;",
				"\t}",
				"\tif (line) {",
					"\t\tbuildenLine = \" at line \" + line;",
				"\t}",
				"\tif (advise) {",
					"\t\tbuildenAdvise = \"\\n\\n\" + advise;",
				"\t}",
				"\tSys.alert(\"An error\" + buildenNum + \" occurred\" + buildenLine + \": \" + mes + buildenAdvise + \"\\n\\nIf the error is still exist, contact the developer\");",
				"\t// An error( --num) occurred( at line --line): --mes(\\n\\n--advise)\\n\\nIf the error is still exist, contact the developer",
				"\tSys.stop();",
			"}"
			]
	},
	"initialize setting builder": {
		"prefix": "builderInit",
		"body": [
			"var builder = Setting.builder();",
			"$0",
			"var dialog = builder.build();",
			"var result = dialog.show();",
			"if (result) {\n\t\n} else {\n\t\n}"
		]
	},
	"add new group": {
		"prefix": "group",
		"body": [
			"builder.group();    // ${1:num}",
			"\t$0",
	  		"builder.groupEnd(); // ${1:num}"
		]
	},
	"Add text": {
		"prefix": "text",
		"body": [
			"builder.add(\"${1:txt}\", TextView(\"$2\"));$0"
		]
	},
	"Add checkbox": {
		"prefix": "checkbox",
		"body": [
			"builder.add(\"${1:checkbox}\", Checkbox(${2:false}, \"${4:text}\"));$0"
		]
	},
	"Add radioGroup": {
		"prefix": "radioGroup",
		"body": [
			"builder.add(\"${1:RadioGroup}\", RadioGroup([\"${2:name}\"], ${3:0})${4:.dropdown(true)});$0"
		]
	},
	"Add editText": {
		"prefix": "EditText",
		"body": [
			"builder.add(\"${1:EditText}\", EditText(\"${2:default text}\", ${3:0 - text, 1 - num}, \"${4:text above}\", \"${5:text below}\"));\n$0"
		]
	},
	"function": {
		"prefix": "fun",
		"body": [
			"fun ${1:name}($2) {\n\t$3\n}"
		]
	},
	"Create a title": {
		"prefix": "title",
		"body": [
			"//\t\t-----------------------------\t\t",
			"//\t\t\t$1\t\t\t",
			"//\t\t-----------------------------\t\t\n$0"
		]
	},
	"if": {
		"prefix": "if1",
		"body": ["if (${1:condition}) {\n\t$0\n}"]
	},
	"if + else": {
		"prefix": "if2",
		"body": ["if (${1:condition}) {\n\t$2\n} else {\n\t$0\n}"]
	},
	"if + else if": {
		"prefix": "if3",
		"body": ["if (${1:condition}) {\n\t$2\n} else if (${3:condition}) {\n\t$0\n}"]
	},
	"if + else if + else": {
		"prefix": "if4",
		"body": ["if (${1:condition}) {\n\t$2\n} else if (${3:condition}) {\n\t$4\n} else {\n\t$5\n}"]
	},
	"for-loop": {
		"prefix": "for",
		"body": ["for (var i = ${1:0}; ${2:i < 1}; i = i + 1) {\n\t$0\n}"]
	},
	"while-loop": {
		"prefix": "while",
		"body": ["while($1) {\n\t$0\n}"]
	},
	"do while-loop": {
		"prefix": "do-while",
		"body": ["do {\n\t$0\n} while($1);"]
	},
	"CParam": {
		"prefix": "CParam",
		"body": ["CParam.repeat(${1:1}).hold(${2:0}).delay(${3:0}).waitNext(${4:100}).random(${5:0});"]
	},
	"SParam": {
		"prefix": "SParam",
		"body": ["SParam.repeat(${1:1}).delay(${2:0}).waitNext(${3:100}).random(${4:0});"]
	},
	"FParam": {
		"prefix": "FParam",
		"body": ["FParam.timeout(${1:0}).sRate(${2:3}).mScore(${3:0.7});"]
	},
	"TParam": {
		"prefix": "TParam",
		"body": ["TParam.timeout(${1:0}).sRate(${2:3}).mScore(${3:0.7}).scale(${4:1}).mode(${5:0 - word, 1 - line, 2 - para})${6:.whitelist(\"$7\")}${8:.blacklist($9)}${10:.case(${11:false})};"]
	}
}